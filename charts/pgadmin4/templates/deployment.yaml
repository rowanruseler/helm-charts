{{- $fullName := include "pgadmin.fullname" . -}}
apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $fullName }}
  namespace: {{ include "pgadmin.namespaceName" . }}
  labels: {{ include "pgadmin.labels" . | nindent 4 }}
{{- with .Values.annotations }}
  annotations: {{ include "pgadmin.tplToMap" (dict "toMap" . "context" $) | nindent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "pgadmin.selectorLabels" . | nindent 6 }}
{{- if .Values.strategy }}
  strategy:
    {{- .Values.strategy | toYaml | nindent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pgadmin.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.podLabels }}
        {{- include "pgadmin.tplToMap" (dict "toMap" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .Values.commonLabels }}
        {{- include "pgadmin.tplToMap" (dict "toMap" . "context" $) | nindent 8 }}
        {{- end }}
    {{- if or (not .Values.existingSecret) .Values.podAnnotations .Values.templatedPodAnnotations (and .Values.serverDefinitions.enabled (not .Values.serverDefinitions.existingConfigmap) (not .Values.serverDefinitions.existingSecret)) (and .Values.preferences.enabled (not .Values.preferences.existingConfigMap)) }}
      annotations:
      {{- with .Values.podAnnotations }}
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.templatedPodAnnotations }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- if not .Values.existingSecret }}
        checksum/secret: {{ include (print .Template.BasePath "/auth-secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if and .Values.serverDefinitions.enabled (not .Values.serverDefinitions.existingConfigmap) (not .Values.serverDefinitions.existingSecret) }}
        checksum/server-definitions: {{ include (print .Template.BasePath (printf "/server-definitions-%s.yaml" (lower .Values.serverDefinitions.resourceType))) . | sha256sum }}
      {{- end }}
      {{- if and .Values.preferences.enabled (not .Values.preferences.existingConfigMap) }}
        checksum/preferences: {{ include (print .Template.BasePath "/preferences-configmap.yaml") . | sha256sum }}
      {{- end }}
    {{- end }}
    spec:
    {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ default $fullName .Values.serviceAccount.name }}
    {{- end }}
    {{- if .Values.hostAliases }}
      hostAliases:
      {{- range .Values.hostAliases }}
      - ip: {{ .ip | quote }}
        hostnames:
        {{- range .hostnames }}
        - {{ . | quote }}
        {{- end }}
      {{- end }}
    {{- end }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
    {{- if or (.Values.VolumePermissions.enabled) .Values.extraInitContainers }}
      initContainers:
      {{- if .Values.VolumePermissions.enabled }}
        - name: init-chmod-data
          image: {{ include "pgadmin.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin"]
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
              subPath: "{{ .Values.persistentVolume.subPath }}"
          securityContext:
            runAsUser: 0
          resources:
            {{- .Values.init.resources | toYaml | nindent 12 }}
      {{- end }}
      {{- with .Values.extraInitContainers }}
        {{ tpl . $ | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "pgadmin.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          command: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
            httpGet:
              port: http
              path: "{{ .Values.env.contextPath }}/misc/ping"
              scheme: {{ .Values.probeScheme }}
            {{- .Values.livenessProbe | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            httpGet:
              port: http
              path: "{{ .Values.env.contextPath }}/misc/ping"
              scheme: {{ .Values.probeScheme }}
            {{- .Values.readinessProbe | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            httpGet:
              port: http
              path: "{{ .Values.env.contextPath }}/misc/ping"
              scheme: {{ .Values.probeScheme }}
            {{- .Values.startupProbe | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: {{ .Values.env.enhanced_cookie_protection | quote }}
            - name: PGADMIN_DEFAULT_EMAIL
              value: {{ .Values.env.email }}
          {{- with .Values.env.pgpassfile }}
            - name: PGPASSFILE
              value: {{ . }}
          {{- end }}
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
          {{- if not .Values.existingSecret }}
                  name: {{ $fullName }}
                  key: password
          {{- else }}
                  name: {{ .Values.existingSecret }}
                  key: {{ .Values.secretKeys.pgadminPasswordKey }}
          {{- end }}
          {{- if .Values.env.contextPath }}
            - name: SCRIPT_NAME
              value: {{ .Values.env.contextPath }}
          {{- end }}
          {{- if and (.Values.serverDefinitions.enabled) (or (eq .Values.serverDefinitions.resourceType "ConfigMap") (eq .Values.serverDefinitions.resourceType "Secret")) -}}
          {{- if or (.Values.serverDefinitions.existingConfigmap) (.Values.serverDefinitions.existingSecret) (.Values.serverDefinitions.servers) }}
            - name: PGADMIN_SERVER_JSON_FILE
              value: /pgadmin4/servers.json
          {{- end }}
          {{- end }}
          {{- if .Values.preferences.enabled }}
            - name: PGADMIN_PREFERENCES_JSON_FILE
              value: /pgadmin4/preferences.json
          {{- end }}
          {{- range .Values.env.variables }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
          {{- end }}
          {{- with .Values.envVarsExtra }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.envVarsFromConfigMaps .Values.envVarsFromSecrets }}
          envFrom:
            {{- range .Values.envVarsFromConfigMaps }}
            - configMapRef:
                name: {{ . | quote }}
            {{- end }}
            {{- range .Values.envVarsFromSecrets }}
            - secretRef:
                name: {{ . | quote }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
              subPath: "{{ .Values.persistentVolume.subPath }}"
          {{- if and (.Values.serverDefinitions.enabled) (or (eq .Values.serverDefinitions.resourceType "ConfigMap") (eq .Values.serverDefinitions.resourceType "Secret")) -}}
          {{- if or (.Values.serverDefinitions.existingConfigmap) (.Values.serverDefinitions.existingSecret) (.Values.serverDefinitions.servers) }}
            - name: definitions
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
          {{- end }}
          {{- end }}
          {{- if .Values.preferences.enabled }}
            - name: preferences
              mountPath: /pgadmin4/preferences.json
              subPath: preferences.json
          {{- end }}
          {{- range .Values.extraConfigmapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- .Values.extraVolumeMounts | toYaml | nindent 12 }}
          {{- end }}
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
    {{- with .Values.extraContainers }}
      {{ tpl . $ | nindent 8 }}
    {{- end }}
      volumes:
        - name: pgadmin-data
        {{- if .Values.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ $fullName }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- range .Values.extraConfigmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ tpl (.configMap) $ }}
            defaultMode: {{ .defaultMode | default 256 }}
      {{- end }}
      {{- range .Values.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ tpl (.secret) $ }}
            defaultMode: {{ .defaultMode | default 256 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{- .Values.extraVolumes | toYaml | nindent 8 }}
      {{- end }}
      {{- if and (.Values.serverDefinitions.enabled) (eq .Values.serverDefinitions.resourceType "Secret") -}}
        {{- if or (.Values.serverDefinitions.existingSecret) (.Values.serverDefinitions.servers) }}
        - name: definitions
          secret:
            secretName: {{ include "pgadmin.serverDefinitionsSecret" . }}
        {{- end }}
      {{- else if and (.Values.serverDefinitions.enabled) (eq .Values.serverDefinitions.resourceType "ConfigMap") -}}
        {{ if or (.Values.serverDefinitions.existingConfigmap) (.Values.serverDefinitions.servers) }}
        - name: definitions
          configMap:
            name: {{ include "pgadmin.serverDefinitionsConfigmap" . }}
            items:
            - key: servers.json
              path: servers.json
        {{- end }}
      {{- end }}
      {{- if .Values.preferences.enabled }}
        - name: preferences
          configMap:
            name: {{ .Values.preferences.existingConfigMap | default (printf "%s-preferences" (include "pgadmin.fullname" .)) }}
      {{- end }}
    {{- if or .Values.imagePullSecrets .Values.global.imagePullSecrets }}
    {{- $pullSecrets := include "pgadmin.imagePullSecrets" . }}
      imagePullSecrets:
        {{ $pullSecrets | nindent 8 | trim }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- .Values.nodeSelector | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.securityContext }}
      securityContext:
        {{- .Values.securityContext | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{- .Values.affinity | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
        {{- .Values.tolerations | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
    {{- end }}
    {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- .Values.dnsConfig | toYaml | nindent 8 }}
    {{- end }}
