{{- $fullName := include "pgadmin.fullname" . -}}
apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "pgadmin.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pgadmin.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.strategy }}
  strategy:
    {{- .Values.strategy | toYaml | nindent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pgadmin.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if or (not .Values.existingSecret) .Values.podAnnotations }}
      annotations:
    {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
    {{- end }}
    {{- if not .Values.existingSecret }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    {{- end }}
    {{- end }}
    spec:
      initContainers:
        - name: init-pgadmin
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin"]
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          securityContext:
            runAsUser: 0
    {{- with .Values.extraInitContainers }}
      {{ tpl . $ | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
        {{- if .Values.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            {{- .Values.livenessProbe | toYaml | nindent 12 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            {{- .Values.readinessProbe | toYaml | nindent 12 }}
        {{- end }}
          env:
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: !!string {{ .Values.env.enhanced_cookie_protection }}
            - name: PGADMIN_DEFAULT_EMAIL
              value: {{ .Values.env.email }}
          {{- if .Values.env.pgpassfile }}
            - name: PGPASSFILE
              value: {{ .Values.env.pgpassfile }}
          {{- end }}
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
          {{- if not .Values.existingSecret }}
                  name: {{ $fullName }}
          {{- else }}
                  name: {{ .Values.existingSecret }}
          {{- end }}
                  key: password
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          {{- if .Values.serverDefinitions.enabled }}
            - name: definitions
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
          {{- end }}
          {{- range .Values.extraConfigmapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: {{ .readOnly }}
          {{- end }}
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
    {{- with .Values.extraContainers }}
      {{ tpl . $ | nindent 8 }}
    {{- end }}
      volumes:
        - name: pgadmin-data
        {{- if .Values.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ $fullName }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- range .Values.extraConfigmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
            defaultMode: {{ .defaultMode | default 256 }}
      {{- end }}
      {{- range .Values.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secret }}
            defaultMode: {{ .defaultMode | default 256 }}
      {{- end }}
      {{- if .Values.serverDefinitions.enabled }}
        - name: definitions
          secret:
            secretName: {{ template "pgadmin.secretName" . }}
            items:
            - key: servers.json
              path: servers.json
      {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- .Values.imagePullSecrets | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- .Values.nodeSelector | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.securityContext }}
      securityContext:
        {{- .Values.securityContext | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{- .Values.affinity | toYaml | nindent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
        {{- .Values.tolerations | toYaml | nindent 8 }}
    {{- end }}
